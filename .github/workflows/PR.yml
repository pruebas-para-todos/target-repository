name: IA Workflow
on:
  pull_request:
    types: [opened, reopened]
    branches:
      - main
env:
  # Token con permisos dentro de la ORG
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Variable donde coger el audit file
  AUDIT_REPOSITORY: bitbucket-audit
  # Owner del repositorio
  REPOSITORY_OWNER: ${{ github.repository_owner }}
  CHECKOUT_HEAD_PATH: head
  CHECKOUT_AUDIT_PATH: audit
concurrency:
  group: ia-workflow
  cancel-in-progress: false

jobs:
    execute-ia:
      runs-on: ubuntu-latest
      steps:
        - name: GET Files
          id: file
          run: |
            response=$(curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ env.GH_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/pruebas-para-todos/target-repository/pulls/${{ github.event.pull_request.number }}/files)
            echo "$response"
            file_names=$(echo "$response" | jq -r '.[] | .filename')
            echo $file_names
            echo "FILE_NAME=$file_names" >> $GITHUB_OUTPUT
        - name: Checkout file
          uses: actions/checkout@v4
          with:
            path: ${{ env.CHECKOUT_HEAD_PATH }}
            ref: ${{ github.head_ref }}
            sparse-checkout: ${{ steps.file.outputs.FILE_NAME }}
        - name: Checkout audit file
          uses: actions/checkout@v4
          with:
            path: ${{ env.CHECKOUT_AUDIT_PATH }}
            repository: ${{ env.REPOSITORY_OWNER }}/${{ env.AUDIT_REPOSITORY }}
            sparse-checkout: README.md
        - name: Check if PR is from Build or Deployment
          id: path
          run: |
            name=$(yq -e .name ${{ env.CHECKOUT_HEAD_PATH }}/${{ steps.file.outputs.FILE_NAME }})/
            if [[ $name == *"/"* ]]; then
              project=$(echo $name | cut -d'/' -f1)
              plan=$(echo $name | cut -d'/' -f2)
              echo "FILE_PATH=build/$project/$plan" >> $GITHUB_OUTPUT
            else
              echo "FILE_PATH=deployment/$name" >> $GITHUB_OUTPUT
            fi
        - name: Check if that YML is successful
          working-directory: ${{ env.CHECKOUT_AUDIT_PATH }}
          run: |
            ls
            successful=$(grep -A 3 "### Successful" README.md | grep "${{ steps.path.outputs.FILE_PATH }}")
            if [ -n "$successful" ]; then
              echo "La cadena está presente en Successful."
            else
              echo "La cadena no está presente en Successful."
            fi


            
            
            
            
            


